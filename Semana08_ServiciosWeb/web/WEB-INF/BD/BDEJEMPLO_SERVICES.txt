DROP DATABASE IF EXISTS BDEJEMPLO;
CREATE DATABASE BDEJEMPLO;
USE BDEJEMPLO;


CREATE TABLE CLIENTE
(COD_CLI INT AUTO_INCREMENT PRIMARY KEY,
NOM_CLI VARCHAR(80),
APE_CLI VARCHAR(80)
);

DELIMITER $$
CREATE PROCEDURE SP_REG_CLIENTE
(NOM VARCHAR(80), APE VARCHAR(80)
)
BEGIN
	INSERT INTO CLIENTE(NOM_CLI,APE_CLI)
	VALUES(NOM,APE);
		
END$$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE SP_ACT_CLIENTE
(COD INT,NOM VARCHAR(80),APE VARCHAR(80)
)
BEGIN
	UPDATE CLIENTE SET
	NOM_CLI=NOM,
		APE_CLI=APE
	WHERE COD_CLI = COD;
END$$
DELIMITER ;



CALL SP_REG_CLIENTE('Juan','Guzman Robles');
CALL SP_REG_CLIENTE('Johan','Romaní Palomino');
CALL SP_REG_CLIENTE('Jacinto','Lopez Vega');

DELIMITER $$
CREATE PROCEDURE SP_BUS_CLIENTE
(COD INT)
BEGIN
	SELECT * FROM CLIENTE
	WHERE COD_CLI=COD; 
END$$
DELIMITER ;



DELIMITER $$
CREATE PROCEDURE SP_DEL_CLIENTE
(COD INT)
BEGIN
	DELETE FROM CLIENTE
	WHERE COD_CLI=COD;

END$$
DELIMITER ;

CALL SP_BUS_CLIENTE(1);


/****************************************************/
/********************LOGIN***************************/
CREATE TABLE LOGIN
(COD_LOG INT AUTO_INCREMENT PRIMARY KEY,
COR_LOG VARCHAR(70),
PAS_LOG VARCHAR(90),
COD_CLI INT,
TIP_USU CHAR(1),
CONSTRAINT FK_COD_CLI_LOG FOREIGN KEY(COD_CLI)
REFERENCES CLIENTE(COD_CLI)
);

DELIMITER $$
CREATE PROCEDURE SP_REG_LOGIN
(COR VARCHAR(80),PAS VARCHAR(80),
CCLI VARCHAR(80),TIP CHAR(1)
)
BEGIN
	INSERT INTO LOGIN(COR_LOG,PAS_LOG,COD_CLI,TIP_USU)
	VALUES(COR,PAS,CCLI,TIP);
END$$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE SP_ACT_LOGIN
(COD INT,COR VARCHAR(80),PAS VARCHAR(80),
CCLI VARCHAR(80),TIP CHAR(1)
)
BEGIN
	UPDATE LOGIN SET
	COR_LOG=COR,
	PAS_LOG=PAS,
	COD_CLI=CCLI,
        TIP_USU=TIP
	WHERE COD_LOG = COD;
END$$
DELIMITER ;



CALL SP_REG_LOGIN('juanito@webzero.com','123',1,'U');
CALL SP_REG_LOGIN('romani@gmail.com','123',2,'A');






DROP PROCEDURE IF EXISTS SP_VALIDAR_LOGIN;
DELIMITER $$
CREATE PROCEDURE SP_VALIDAR_LOGIN
(COR VARCHAR(60), PAS VARCHAR(60))
BEGIN
SET @VC='',@VP='';

	IF (SELECT @VC:=COD_LOG FROM LOGIN WHERE COR_LOG=COR LIMIT 1) IS NULL THEN
		SELECT 'Error no se encontro ningun correo electronico';
	ELSEIF (SELECT PAS_LOG FROM LOGIN WHERE COD_LOG=@VC AND PAS_LOG=PAS LIMIT 1)IS NULL THEN
		SELECT 'Error en el ingreso de la contraseña';
	ELSEIF (SELECT COUNT(PAS_LOG) FROM LOGIN WHERE COD_LOG=@VC AND PAS_LOG=PAS LIMIT 1)=1  THEN
		SELECT  "Autorizado";
	END IF;
END$$
DELIMITER ;

CALL SP_VALIDAR_LOGIN('romani@gmail.com','123');



DELIMITER $$
CREATE PROCEDURE SP_DATOS_USUARIO
(COR VARCHAR(60), PAS VARCHAR(60))
BEGIN
    SELECT c.COD_CLI,c.NOM_CLI,c.APE_CLI,l.TIP_USU 
    FROM cliente c
    INNER JOIN login l
    ON c.COD_CLI=l.COD_CLI
    WHERE  l.COR_LOG=COR AND l.PAS_LOG=PAS;
END
$$ DELIMITER ;

CALL SP_DATOS_USUARIO('romani@gmail.com','123');


CREATE TABLE REGISTRO_USUARIO
(COD_REG INT AUTO_INCREMENT PRIMARY KEY,
COD_CLI INT,
FECHA_ENT DATETIME,
FECHA_SAL DATETIME,
CONSTRAINT FK_COD_CLI_REG FOREIGN KEY(COD_CLI)
REFERENCES CLIENTE(COD_CLI)
);


DELIMITER $$
CREATE PROCEDURE SP_INS_REGISTRO_USUARIO
(CCLI INT,ING DATETIME,SAL DATETIME
)
BEGIN
	
	INSERT INTO REGISTRO_USUARIO(COD_CLI,FECHA_ENT,FECHA_SAL)
	VALUES(CCLI,ING,SAL);

END$$
DELIMITER ;


CALL SP_INS_REGISTRO_USUARIO(2,'2019-05-01 10:40:50','2019-05-01 15:30:59');
CALL SP_INS_REGISTRO_USUARIO(2,'2019-05-02 10:40:50','2019-05-02 15:30:59');
CALL SP_INS_REGISTRO_USUARIO(2,'2019-05-03 10:40:50','2019-05-03 15:30:59');
CALL SP_INS_REGISTRO_USUARIO(2,'2019-05-04 10:40:50','2019-05-04 15:30:59');

CALL SP_INS_REGISTRO_USUARIO(1,'2019-05-05 10:40:50','2019-05-05 15:30:59');
CALL SP_INS_REGISTRO_USUARIO(1,'2019-05-06 10:40:50','2019-05-06 15:30:59');


SELECT * FROM REGISTRO_USUARIO;